function renderPersonItem(){peopleDataLocal.forEach(function(e,t){peopleName[t].dataset.name=e.name,peopleName[t].innerHTML=e.name,peopleName[t].parentElement.classList.add("people-list__item-wrapper--show"),peopleName[t].parentElement.classList.remove("people-list__item-wrapper--fade"),searchInput.value=""})}function renderPlanetItem(){var e=document.querySelectorAll(".people-list__planet");peopleDataLocal.forEach(function(t,n){var o=getPersonPlanetName(t.planet);e[n].innerHTML=o,e[n].dataset.planet=o})}function getPersonPlanetName(e){var t="";return planetDataLocal.forEach(function(n){n.id!==parseInt(e)||(t=n.name)}),t}function requestSWInfo(e,t){return new Promise(function(n,o){var a=new XMLHttpRequest;a.open(t,e,!0),a.send(),a.onreadystatechange=function(){if(4===a.readyState)if(200===a.status){var e=a.responseText,t=JSON.parse(e);n(t)}else o(a.status),console.log("xhr failed");else console.log("xhr processing going on")}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}function getPlanetData(){function e(e){for(var a=1;a<=e;a++)currentPlanetURL=s+a,c.push(requestSWInfo(currentPlanetURL,"GET"));Promise.all(c.map(reflect)).then(function(e){t(e),n(),renderPlanetItem(),o()})}function t(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,terrain:e.resolved.terrain,population:e.resolved.population,diameter:e.resolved.diameter};e.resolved.residents.length?n.residents=e.resolved.residents.map(function(e){return e.replace(/[^0-9]/g,"")}):n.residents="unknown",planetDataLocal.push(n)}t++})}function n(){peopleDataLocal.forEach(function(e){e.planetName=getPersonPlanetName(e.planet)})}function o(){l.classList.add("load-screen--fadeout"),loadGif.classList.add("load-screen__img--moveout"),loadBalloonImg.classList.remove("load-screen__balloon--show"),setTimeout(function(){r.classList.add("main--show")},1e3),setTimeout(function(){a.forEach(function(e){e.classList.add("people-list__item-wrapper--show-items")})},1200)}var a=document.querySelectorAll(".people-list__item-wrapper"),r=document.querySelector(".main"),l=document.querySelector(".load-screen"),s="https://swapi.co/api/planets/",c=[];requestSWInfo(s,"GET").then(function(t){e(t.count)},errorHandler)}var loadBalloonImg=document.querySelector(".load-screen__balloon"),loadGif=document.querySelector(".load-screen__img"),searchInput=document.querySelector(".header__input"),peopleDataLocal=[],planetDataLocal=[],peopleName,peopleWrapper,renderList=function(){function e(e){for(var t=1;t<e;t+=2){var n=a.cloneNode(!0);o.appendChild(n)}peopleName=document.querySelectorAll(".people-list__name"),peopleWrapper=document.querySelectorAll(".people-list__item-wrapper")}function t(e){for(var t=1;t<=e;t++)currentPersonURL=r+t,l.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(l.map(reflect)).then(function(e){n(e),renderPersonItem(),getPlanetData()})}function n(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,height:e.resolved.height,weight:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?n.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):n.planet="Unknown",e.resolved.species[0]?n.species=e.resolved.species[0].replace(/[^0-9]/g,""):n.species="Unknown",peopleDataLocal.push(n)}t++})}var o=document.querySelector(".people-list__grid"),a=document.querySelector(".people-list__item"),r="https://swapi.co/api/people/",l=[];document.addEventListener("DOMContentLoaded",function(){setTimeout(function(){loadGif.classList.add("load-screen__img--movein")},200),setTimeout(function(){loadBalloonImg.classList.add("load-screen__balloon--show")},2200)}),requestSWInfo(r,"GET").then(function(n){var o=n.count;e(o),t(o)},errorHandler)}(),search=function(){function e(){term=searchInput.value;var e=0,t=new RegExp(term,"gi");peopleWrapper.forEach(function(n){n.children[0].dataset.name&&(n.children[0].dataset.name.match(t)||n.children[1].dataset.planet.match(t)?(e++,n.classList.add("people-list__item-wrapper--show"),setTimeout(function(){n.classList.remove("people-list__item-wrapper--fade")},200)):(n.classList.add("people-list__item-wrapper--fade"),setTimeout(function(){n.classList.remove("people-list__item-wrapper--show")},200)))}),0===e?searchInput.classList.add("header__input--no-results"):searchInput.classList.remove("header__input--no-results")}document.querySelectorAll(".people-list__planet");searchInput.addEventListener("change",e),searchInput.addEventListener("keyup",e)}(),sortPeople=function(){var e=document.querySelector(".header__select");e.addEventListener("change",function(){!function(e){peopleDataLocal.sort(function(t,n){return t[e]<n[e]?-1:t[e]>n[e]?1:0})}(e.value),renderPersonItem(),renderPlanetItem()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
