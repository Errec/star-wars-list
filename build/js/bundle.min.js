function renderPersonItem(){peopleDataLocal.forEach(function(e,t){peopleName[t].dataset.name=e.name,peopleName[t].innerHTML=e.name,peopleName[t].parentElement.classList.add("people-list__item-wrapper--show")})}function renderPlanetItem(){var e=document.querySelectorAll(".people-list__planet");peopleDataLocal.forEach(function(t,n){var r=getPersonPlanetName(t.planet);e[n].innerHTML=r,e[n].dataset.planet=r})}function getPersonPlanetName(e){var t="";return planetDataLocal.forEach(function(n){n.id!==parseInt(e)||(t=n.name)}),t}function requestSWInfo(e,t){return new Promise(function(n,r){var a=new XMLHttpRequest;a.open(t,e,!0),a.send(),a.onreadystatechange=function(){if(4===a.readyState)if(200===a.status){var e=a.responseText,t=JSON.parse(e);n(t)}else r(a.status)}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}function getPlanetData(){function e(e){for(var a=1;a<=e;a++)currentPlanetURL=c+a,i.push(requestSWInfo(currentPlanetURL,"GET"));Promise.all(i.map(reflect)).then(function(e){t(e),n(),renderPlanetItem(),r()})}function t(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,terrain:e.resolved.terrain,population:e.resolved.population,diameter:e.resolved.diameter};e.resolved.residents.length?n.residents=e.resolved.residents.map(function(e){return e.replace(/[^0-9]/g,"")}):n.residents="unknown",planetDataLocal.push(n)}t++})}function n(){peopleDataLocal.forEach(function(e){e.planetName=getPersonPlanetName(e.planet)})}function r(){l.classList.add("load-screen--fadeout"),s.classList.add("load-screen__img--moveout"),setTimeout(function(){o.classList.add("main--show")},1e3),setTimeout(function(){a.forEach(function(e){e.classList.add("people-list__item-wrapper--show-items")})},1200)}var a=document.querySelectorAll(".people-list__item-wrapper"),o=document.querySelector(".main"),l=document.querySelector(".load-screen"),s=document.querySelector(".load-screen__img"),c="https://swapi.co/api/planets/",i=[];requestSWInfo(c,"GET").then(function(t){e(t.count)},errorHandler)}var peopleDataLocal=[],planetDataLocal=[],peopleName,peopleWrapper,renderList=function(){function e(e){for(var t=1;t<e;t+=2){var n=a.cloneNode(!0);r.appendChild(n)}peopleName=document.querySelectorAll(".people-list__name"),peopleWrapper=document.querySelectorAll(".people-list__item-wrapper")}function t(e){for(var t=1;t<=e;t++)currentPersonURL=o+t,l.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(l.map(reflect)).then(function(e){n(e),renderPersonItem(),getPlanetData()})}function n(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,height:e.resolved.height,weight:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?n.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):n.planet="Unknown",e.resolved.species[0]?n.species=e.resolved.species[0].replace(/[^0-9]/g,""):n.species="Unknown",peopleDataLocal.push(n)}t++})}var r=document.querySelector(".people-list__grid"),a=document.querySelector(".people-list__item"),o="https://swapi.co/api/people/",l=[];requestSWInfo(o,"GET").then(function(n){var r=n.count;e(r),t(r)},errorHandler)}(),search=function(){function e(){term=t.value;var e=0,n=new RegExp(term,"gi");peopleWrapper.forEach(function(t){t.children[0].dataset.name&&(t.children[0].dataset.name.match(n)||t.children[1].dataset.planet.match(n)?(e++,t.classList.add("people-list__item-wrapper--show")):t.classList.remove("people-list__item-wrapper--show"))}),0===e?t.classList.add("header__input--no-results"):t.classList.remove("header__input--no-results")}var t=document.querySelector(".header__input");document.querySelectorAll(".people-list__planet");t.addEventListener("change",e),t.addEventListener("keyup",e)}(),sortPeople=function(){var e=document.querySelector(".header__select");e.addEventListener("change",function(){!function(e){peopleDataLocal.sort(function(t,n){return t[e]<n[e]?-1:t[e]>n[e]?1:0})}(e.value),renderPersonItem(),renderPlanetItem()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
