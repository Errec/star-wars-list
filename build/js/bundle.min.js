function requestSWInfo(e,n){return new Promise(function(t,r){var o=new XMLHttpRequest;o.open(n,e,!0),o.send(),o.onreadystatechange=function(){if(4===o.readyState)if(200===o.status){var e=o.responseText,n=JSON.parse(e);t(n)}else r(o.status)}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}var peopleDataLocal=[],planetDataLocal=[],renderList=function(){function e(e){for(var n=1;n<e;n+=2){var t=s.cloneNode(!0);a.appendChild(t)}o=document.querySelectorAll(".people-list__name")}function n(e){for(var n=1;n<=e;n++)currentPersonURL=i+n,l.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(l.map(reflect)).then(function(e){t(e),r()})}function t(e){var n=0;e.forEach(function(e){if(e.resolved){var t={id:n,name:e.resolved.name,height:e.resolved.height,weight:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?t.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):t.planet="unknown",e.resolved.species[0]?t.species=e.resolved.species[0].replace(/[^0-9]/g,""):t.species="unknown",peopleDataLocal.push(t),n++}})}function r(){peopleDataLocal.forEach(function(e,n){o[n].innerHTML=e.name})}var o,a=document.getElementById("people-grid"),s=document.getElementById("people-item"),i="https://swapi.co/api/people/",l=[];requestSWInfo(i,"GET").then(function(t){var r=t.count;e(r),n(r)},errorHandler)}(),renderList=function(){function e(e){for(var t=1;t<=e;t++)currentPlanetURL=r+t,requestSWInfo(currentPlanetURL,"GET").then(n.bind(null,t-1),errorHandler)}function n(e,n){t(e,n)}function t(e,n){var t={position:e,name:n.name,terrain:n.terrain,population:n.population,diameter:n.diameter};n.residents.length?t.residents=n.residents.map(function(e){return e.replace(/[^0-9]/g,"")}):t.residents="unknown",planetData.push(t),planetData.sort(function(e,n){return e.position-n.position})}var r="https://swapi.co/api/planets/";requestSWInfo(r,"GET").then(function(n){e(n.count)},errorHandler)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJwZW9wbGUtbGlzdC5qcyIsInBsYW5ldC1saXN0LmpzIl0sIm5hbWVzIjpbInJlcXVlc3RTV0luZm8iLCJ1cmwiLCJtZXRob2RUeXBlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3AiLCJyZXNwb25zZVRleHQiLCJyZXNwSnNvbiIsIkpTT04iLCJwYXJzZSIsImVycm9ySGFuZGxlciIsInN0YXR1c0NvZGUiLCJjb25zb2xlIiwibG9nIiwicmVmbGVjdCIsInByb21pc2UiLCJ0aGVuIiwicmVzb2x2ZWQiLCJyZWplY3RlZCIsInBlb3BsZURhdGFMb2NhbCIsInBsYW5ldERhdGFMb2NhbCIsInJlbmRlckxpc3QiLCJfYnVpbGRMaXN0IiwicGVvcGxlTnVtYmVyIiwiaSIsInBlb3BsZUxpQ2xvbmUiLCJwZW9wbGVMaSIsImNsb25lTm9kZSIsInBlb3BsZUdyaWQiLCJhcHBlbmRDaGlsZCIsInBlb3BsZU5hbWUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfcG9wdWxhdGVMaXN0IiwiY3VycmVudFBlcnNvblVSTCIsInBlb3BsZVVSTCIsInByb21pc2VzIiwicHVzaCIsImFsbCIsIm1hcCIsInBlb3BsZURhdGEiLCJfc3RvcmVQZW9wbGVEYXRhIiwiX3JlbmRlclBlcnNvbkl0ZW0iLCJmb3JFYWNoIiwicGVyc29uRGF0YSIsIm5ld1BlcnNvbiIsImlkIiwibmFtZSIsImhlaWdodCIsIndlaWdodCIsIm1hc3MiLCJiaXJ0aF95ZWFyIiwiZ2VuZGVyIiwiaG9tZXdvcmxkIiwicGxhbmV0IiwicmVwbGFjZSIsInNwZWNpZXMiLCJwZXJzb24iLCJpbmRleCIsImlubmVySFRNTCIsImdldEVsZW1lbnRCeUlkIiwiZGF0YSIsImNvdW50IiwicGxhbmV0TnVtYmVyIiwiY3VycmVudFBsYW5ldFVSTCIsInBsYW5ldFVSTCIsIl9nZXRQbGFudGVEYXRhIiwiYmluZCIsIl9zdG9yZVBsYW5ldERhdGEiLCJuZXdQbGFuZXQiLCJwb3NpdGlvbiIsInRlcnJhaW4iLCJwb3B1bGF0aW9uIiwiZGlhbWV0ZXIiLCJyZXNpZGVudHMiLCJsZW5ndGgiLCJyZXNpZGVudFVSTCIsInBsYW5ldERhdGEiLCJzb3J0IiwiYSIsImIiXSwibWFwcGluZ3MiOiJBQUFBLFNBQUFBLGNBQUFDLEVBQUFDLEdBb0JBLE9BbkJBLElBQUFDLFFBQUEsU0FBQUMsRUFBQUMsR0FDQSxJQUFBQyxFQUFBLElBQUFDLGVBQ0FELEVBQUFFLEtBQUFOLEVBQUFELEdBQUEsR0FDQUssRUFBQUcsT0FDQUgsRUFBQUksbUJBQUEsV0FDQSxHQUFBLElBQUFKLEVBQUFLLFdBQ0EsR0FBQSxNQUFBTCxFQUFBTSxPQUFBLENBQ0EsSUFBQUMsRUFBQVAsRUFBQVEsYUFDQUMsRUFBQUMsS0FBQUMsTUFBQUosR0FDQVQsRUFBQVcsUUFFQVYsRUFBQUMsRUFBQU0sV0FXQSxTQUFBTSxhQUFBQyxHQUNBQyxRQUFBQyxJQUFBLHFCQUFBVCxRQUdBLFNBQUFVLFFBQUFDLEdBQ0EsT0FBQUEsRUFBQUMsS0FBQSxTQUFBQyxHQUFBLE9BQUFBLFNBQUFBLEVBQUFiLE9BQUEsYUFDQSxTQUFBYyxHQUFBLE9BQUFBLFNBQUFBLEVBQUFkLE9BQUEsY0FHQSxJQUFBZSxtQkFDQUMsbUJDakNBQyxXQUFBLFdBZ0JBLFNBQUFDLEVBQUFDLEdBQ0EsSUFBQSxJQUFBQyxFQUFBLEVBQUFBLEVBQUFELEVBQUFDLEdBQUEsRUFBQSxDQUNBLElBQUFDLEVBQUFDLEVBQUFDLFdBQUEsR0FDQUMsRUFBQUMsWUFBQUosR0FFQUssRUFBQUMsU0FBQUMsaUJBQUEsc0JBR0EsU0FBQUMsRUFBQVYsR0FDQSxJQUFBLElBQUFDLEVBQUEsRUFBQUEsR0FBQUQsRUFBQUMsSUFDQVUsaUJBQUFDLEVBQUFYLEVBQ0FZLEVBQUFDLEtBQUE3QyxjQUFBMEMsaUJBQUEsUUFFQXZDLFFBQUEyQyxJQUFBRixFQUFBRyxJQUFBekIsVUFBQUUsS0FBQSxTQUFBd0IsR0FDQUMsRUFBQUQsR0FDQUUsTUFJQSxTQUFBRCxFQUFBRCxHQUNBLElBQUFoQixFQUFBLEVBQ0FnQixFQUFBRyxRQUFBLFNBQUFDLEdBQ0EsR0FBQUEsRUFBQTNCLFNBQUEsQ0FDQSxJQUFBNEIsR0FDQUMsR0FBQXRCLEVBQ0F1QixLQUFBSCxFQUFBM0IsU0FBQThCLEtBQ0FDLE9BQUFKLEVBQUEzQixTQUFBK0IsT0FDQUMsT0FBQUwsRUFBQTNCLFNBQUFpQyxLQUNBQyxXQUFBUCxFQUFBM0IsU0FBQWtDLFdBQ0FDLE9BQUFSLEVBQUEzQixTQUFBbUMsUUFFQVIsRUFBQTNCLFNBQUFvQyxVQUNBUixFQUFBUyxPQUFBVixFQUFBM0IsU0FBQW9DLFVBQUFFLFFBQUEsVUFBQSxJQUNBVixFQUFBUyxPQUFBLFVBRUFWLEVBQUEzQixTQUFBdUMsUUFBQSxHQUNBWCxFQUFBVyxRQUFBWixFQUFBM0IsU0FBQXVDLFFBQUEsR0FBQUQsUUFBQSxVQUFBLElBQ0FWLEVBQUFXLFFBQUEsVUFFQXJDLGdCQUFBa0IsS0FBQVEsR0FDQXJCLE9BS0EsU0FBQWtCLElBQ0F2QixnQkFBQXdCLFFBQUEsU0FBQWMsRUFBQUMsR0FDQTVCLEVBQUE0QixHQUFBQyxVQUFBRixFQUFBVixPQTlEQSxJQUVBakIsRUFGQUYsRUFBQUcsU0FBQTZCLGVBQUEsZUFDQWxDLEVBQUFLLFNBQUE2QixlQUFBLGVBR0F6QixFQUFBLCtCQUNBQyxLQUVBNUMsY0FBQTJDLEVBQUEsT0FBQW5CLEtBRUEsU0FBQTZDLEdBQ0EsSUFBQXRDLEVBQUFzQyxFQUFBQyxNQUNBeEMsRUFBQUMsR0FDQVUsRUFBQVYsSUFMQWIsY0FSQSxHQ0FBVyxXQUFBLFdBVUEsU0FBQVksRUFBQThCLEdBQ0EsSUFBQSxJQUFBdkMsRUFBQSxFQUFBQSxHQUFBdUMsRUFBQXZDLElBQ0F3QyxpQkFBQUMsRUFBQXpDLEVBQ0FoQyxjQUFBd0UsaUJBQUEsT0FBQWhELEtBQUFrRCxFQUFBQyxLQUFBLEtBQUEzQyxFQUFBLEdBQUFkLGNBSUEsU0FBQXdELEVBQUExQyxFQUFBcUMsR0FDQU8sRUFBQTVDLEVBQUFxQyxHQUdBLFNBQUFPLEVBQUE1QyxFQUFBcUMsR0FDQSxJQUFBUSxHQUNBQyxTQUFBOUMsRUFDQXVCLEtBQUFjLEVBQUFkLEtBQ0F3QixRQUFBVixFQUFBVSxRQUNBQyxXQUFBWCxFQUFBVyxXQUNBQyxTQUFBWixFQUFBWSxVQUdBWixFQUFBYSxVQUFBQyxPQUNBTixFQUFBSyxVQUFBYixFQUFBYSxVQUFBbkMsSUFBQSxTQUFBcUMsR0FDQSxPQUFBQSxFQUFBckIsUUFBQSxVQUFBLE1BR0FjLEVBQUFLLFVBQUEsVUFHQUcsV0FBQXhDLEtBQUFnQyxHQUNBUSxXQUFBQyxLQUFBLFNBQUFDLEVBQUFDLEdBQ0EsT0FBQUQsRUFBQVQsU0FBQVUsRUFBQVYsV0F2Q0EsSUFBQUwsRUFBQSxnQ0FFQXpFLGNBQUF5RSxFQUFBLE9BQUFqRCxLQUVBLFNBQUE2QyxHQUVBNUIsRUFEQTRCLEVBQUFDLFFBSEFwRCxjQUhBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlcXVlc3RTV0luZm8odXJsLCBtZXRob2RUeXBlKXtcbiAgdmFyIHByb21pc2VPYmogPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB4aHIub3BlbihtZXRob2RUeXBlLCB1cmwsIHRydWUpO1xuICAgIHhoci5zZW5kKCk7XG4gICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCl7XG4gICAgICBpZih4aHIucmVhZHlTdGF0ZSA9PT0gNCl7XG4gICAgICAgICBpZih4aHIuc3RhdHVzID09PSAyMDApe1xuICAgICAgICAgIHZhciByZXNwID0geGhyLnJlc3BvbnNlVGV4dDtcbiAgICAgICAgICAgIHZhciByZXNwSnNvbiA9IEpTT04ucGFyc2UocmVzcCk7XG4gICAgICAgICAgICByZXNvbHZlKHJlc3BKc29uKTtcbiAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgIHJlamVjdCh4aHIuc3RhdHVzKTtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwieGhyIGZhaWxlZFwiKTsgLy8gVE9ETzogYXBwZW5kICdjYW50IGZpbmQnIG1zZ1xuICAgICAgICAgICB9XG4gICAgICB9IGVsc2V7XG4gICAgICAgICAvLyBjb25zb2xlLmxvZyhcInhociBwcm9jZXNzaW5nIGdvaW5nIG9uXCIpOyAvLyBUT0RPOiBhZGQgbG9hZGluZyBhbmltYXRpb25cbiAgICAgICAgIH1cbiAgICB9O1xuICB9KTtcbiAgcmV0dXJuIHByb21pc2VPYmo7XG59XG5cbmZ1bmN0aW9uIGVycm9ySGFuZGxlcihzdGF0dXNDb2RlKXtcbiAgY29uc29sZS5sb2coXCJmYWlsZWQgd2l0aCBzdGF0dXNcIiwgc3RhdHVzKTtcbn1cblxuZnVuY3Rpb24gcmVmbGVjdChwcm9taXNlKXtcbiAgcmV0dXJuIHByb21pc2UudGhlbihmdW5jdGlvbihyZXNvbHZlZCl7IHJldHVybiB7cmVzb2x2ZWQ6cmVzb2x2ZWQsIHN0YXR1czogXCJyZXNvbHZlZFwiIH07fSxcbiAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbihyZWplY3RlZCl7IHJldHVybiB7cmVqZWN0ZWQ6cmVqZWN0ZWQsIHN0YXR1czogXCJyZWplY3RlZFwiIH07fSk7XG59XG5cbnZhciBwZW9wbGVEYXRhTG9jYWwgPSBbXTtcbnZhciBwbGFuZXREYXRhTG9jYWwgPSBbXTtcbiIsInZhciByZW5kZXJMaXN0ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgcGVvcGxlR3JpZCAgICA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwZW9wbGUtZ3JpZCcpO1xuICB2YXIgcGVvcGxlTGkgICAgICA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwZW9wbGUtaXRlbScpO1xuICB2YXIgcGVvcGxlTmFtZTtcblxuICB2YXIgcGVvcGxlVVJMID0gJ2h0dHBzOi8vc3dhcGkuY28vYXBpL3Blb3BsZS8nO1xuICB2YXIgcHJvbWlzZXMgPSBbXTtcblxuICByZXF1ZXN0U1dJbmZvKHBlb3BsZVVSTCwgXCJHRVRcIikudGhlbihfc3RhcnRMaXN0LCBlcnJvckhhbmRsZXIpO1xuXG4gIGZ1bmN0aW9uIF9zdGFydExpc3QoZGF0YSkge1xuICAgIHZhciBwZW9wbGVOdW1iZXIgPSBkYXRhLmNvdW50O1xuICAgIF9idWlsZExpc3QocGVvcGxlTnVtYmVyKTtcbiAgICBfcG9wdWxhdGVMaXN0KHBlb3BsZU51bWJlcik7XG4gIH1cblxuICBmdW5jdGlvbiBfYnVpbGRMaXN0KHBlb3BsZU51bWJlcikge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgcGVvcGxlTnVtYmVyOyBpKz0yKSB7XG4gICAgICB2YXIgcGVvcGxlTGlDbG9uZSA9IHBlb3BsZUxpLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgIHBlb3BsZUdyaWQuYXBwZW5kQ2hpbGQocGVvcGxlTGlDbG9uZSk7XG4gICAgfVxuICAgIHBlb3BsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGVvcGxlLWxpc3RfX25hbWUnKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9wb3B1bGF0ZUxpc3QocGVvcGxlTnVtYmVyKSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gcGVvcGxlTnVtYmVyOyBpKyspIHtcbiAgICAgIGN1cnJlbnRQZXJzb25VUkwgPSBwZW9wbGVVUkwgKyBpO1xuICAgICAgcHJvbWlzZXMucHVzaChyZXF1ZXN0U1dJbmZvKGN1cnJlbnRQZXJzb25VUkwsIFwiR0VUXCIpKTtcbiAgICB9XG4gICAgUHJvbWlzZS5hbGwocHJvbWlzZXMubWFwKHJlZmxlY3QpKS50aGVuKGZ1bmN0aW9uKHBlb3BsZURhdGEpe1xuICAgICAgX3N0b3JlUGVvcGxlRGF0YShwZW9wbGVEYXRhKTtcbiAgICAgIF9yZW5kZXJQZXJzb25JdGVtKCk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBfc3RvcmVQZW9wbGVEYXRhKHBlb3BsZURhdGEpIHtcbiAgICB2YXIgaSA9IDA7XG4gICAgcGVvcGxlRGF0YS5mb3JFYWNoKGZ1bmN0aW9uKHBlcnNvbkRhdGEpIHtcbiAgICAgIGlmIChwZXJzb25EYXRhLnJlc29sdmVkKSB7XG4gICAgICAgIHZhciBuZXdQZXJzb24gPSB7XG4gICAgICAgICAgaWQ6IGksXG4gICAgICAgICAgbmFtZTogcGVyc29uRGF0YS5yZXNvbHZlZC5uYW1lLFxuICAgICAgICAgIGhlaWdodDogcGVyc29uRGF0YS5yZXNvbHZlZC5oZWlnaHQsXG4gICAgICAgICAgd2VpZ2h0OiBwZXJzb25EYXRhLnJlc29sdmVkLm1hc3MsXG4gICAgICAgICAgYmlydGhfeWVhcjogcGVyc29uRGF0YS5yZXNvbHZlZC5iaXJ0aF95ZWFyLFxuICAgICAgICAgIGdlbmRlcjogcGVyc29uRGF0YS5yZXNvbHZlZC5nZW5kZXJcbiAgICAgICAgfTtcbiAgICAgICAgcGVyc29uRGF0YS5yZXNvbHZlZC5ob21ld29ybGQgP1xuICAgICAgICBuZXdQZXJzb24ucGxhbmV0ID0gcGVyc29uRGF0YS5yZXNvbHZlZC5ob21ld29ybGQucmVwbGFjZSgvW14wLTldL2csJycpIDpcbiAgICAgICAgbmV3UGVyc29uLnBsYW5ldCA9IFwidW5rbm93blwiO1xuXG4gICAgICAgIHBlcnNvbkRhdGEucmVzb2x2ZWQuc3BlY2llc1swXSA/XG4gICAgICAgIG5ld1BlcnNvbi5zcGVjaWVzID0gcGVyc29uRGF0YS5yZXNvbHZlZC5zcGVjaWVzWzBdLnJlcGxhY2UoL1teMC05XS9nLCcnKSA6XG4gICAgICAgIG5ld1BlcnNvbi5zcGVjaWVzID0gXCJ1bmtub3duXCI7XG5cbiAgICAgICAgcGVvcGxlRGF0YUxvY2FsLnB1c2gobmV3UGVyc29uKTtcbiAgICAgICAgaSsrO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gX3JlbmRlclBlcnNvbkl0ZW0oKSB7XG4gICAgcGVvcGxlRGF0YUxvY2FsLmZvckVhY2goIGZ1bmN0aW9uKHBlcnNvbiwgaW5kZXgpIHtcbiAgICAgIHBlb3BsZU5hbWVbaW5kZXhdLmlubmVySFRNTCA9IHBlcnNvbi5uYW1lO1xuICAgIH0pO1xuICB9XG59KSgpO1xuIiwidmFyIHJlbmRlckxpc3QgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBwbGFuZXRVUkwgPSAnaHR0cHM6Ly9zd2FwaS5jby9hcGkvcGxhbmV0cy8nO1xuXG4gIHJlcXVlc3RTV0luZm8ocGxhbmV0VVJMLCBcIkdFVFwiKS50aGVuKF9zdGFydExpc3QsIGVycm9ySGFuZGxlcik7XG5cbiAgZnVuY3Rpb24gX3N0YXJ0TGlzdChkYXRhKSB7XG4gICAgdmFyIHBsYW5ldE51bWJlciA9IGRhdGEuY291bnQ7XG4gICAgX3BvcHVsYXRlTGlzdChwbGFuZXROdW1iZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3BvcHVsYXRlTGlzdChwbGFuZXROdW1iZXIpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBwbGFuZXROdW1iZXI7IGkrKykge1xuICAgICAgY3VycmVudFBsYW5ldFVSTCA9IHBsYW5ldFVSTCArIGk7XG4gICAgICByZXF1ZXN0U1dJbmZvKGN1cnJlbnRQbGFuZXRVUkwsIFwiR0VUXCIpLnRoZW4oX2dldFBsYW50ZURhdGEuYmluZChudWxsLCBpIC0gMSksIGVycm9ySGFuZGxlcik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX2dldFBsYW50ZURhdGEoaSwgZGF0YSkge1xuICAgIF9zdG9yZVBsYW5ldERhdGEoaSxkYXRhKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9zdG9yZVBsYW5ldERhdGEoaSwgZGF0YSkge1xuICAgIHZhciBuZXdQbGFuZXQgPSB7XG4gICAgICBwb3NpdGlvbjogaSxcbiAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgIHRlcnJhaW46IGRhdGEudGVycmFpbixcbiAgICAgIHBvcHVsYXRpb246IGRhdGEucG9wdWxhdGlvbixcbiAgICAgIGRpYW1ldGVyOiBkYXRhLmRpYW1ldGVyXG4gICAgfTtcblxuICAgIGlmIChkYXRhLnJlc2lkZW50cy5sZW5ndGgpIHtcbiAgICAgIG5ld1BsYW5ldC5yZXNpZGVudHMgPSBkYXRhLnJlc2lkZW50cy5tYXAoZnVuY3Rpb24ocmVzaWRlbnRVUkwpIHtcbiAgICAgICAgcmV0dXJuIHJlc2lkZW50VVJMLnJlcGxhY2UoL1teMC05XS9nLCcnKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXdQbGFuZXQucmVzaWRlbnRzID0gXCJ1bmtub3duXCI7XG4gICAgfVxuXG4gICAgcGxhbmV0RGF0YS5wdXNoKG5ld1BsYW5ldCk7XG4gICAgcGxhbmV0RGF0YS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wb3NpdGlvbiAtIGIucG9zaXRpb247XG4gICAgfSk7XG4gIH1cbn0pKCk7XG4iXX0=
