function requestSWInfo(e,t){return new Promise(function(n,r){var a=new XMLHttpRequest;a.open(t,e,!0),a.send(),a.onreadystatechange=function(){if(4===a.readyState)if(200===a.status){var e=a.responseText,t=JSON.parse(e);n(t)}else r(a.status)}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}function getPlanetData(){function e(e){for(var r=1;r<=e;r++)currentPlanetURL=c+r,u.push(requestSWInfo(currentPlanetURL,"GET"));Promise.all(u.map(reflect)).then(function(e){t(e),n(),a()})}function t(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,terrain:e.resolved.terrain,population:e.resolved.population,diameter:e.resolved.diameter};e.resolved.residents.length?n.residents=e.resolved.residents.map(function(e){return e.replace(/[^0-9]/g,"")}):n.residents="unknown",planetDataLocal.push(n)}t++})}function n(){peopleDataLocal.forEach(function(e,t){var n=r(e.planet);o[t].innerHTML=n,o[t].dataset.planet=n})}function r(e){var t="";return planetDataLocal.forEach(function(n){n.id!==parseInt(e)||(t=n.name)}),t}function a(){i.classList.add("load-screen--fadeout"),p.classList.add("load-screen__img--moveout"),setTimeout(function(){s.classList.add("main--show")},1e3),setTimeout(function(){l.forEach(function(e){e.classList.add("people-list__item-wrapper--show-items")})},1200)}var o=document.querySelectorAll(".people-list__planet"),l=document.querySelectorAll(".people-list__item-wrapper"),s=document.querySelector(".main"),i=document.querySelector(".load-screen"),p=document.querySelector(".load-screen__img"),c="https://swapi.co/api/planets/",u=[];requestSWInfo(c,"GET").then(function(t){e(t.count)},errorHandler)}var peopleDataLocal=[],planetDataLocal=[],peopleName,peopleWrapper,renderList=function(){function e(e){for(var t=1;t<e;t+=2){var n=o.cloneNode(!0);a.appendChild(n)}peopleName=document.querySelectorAll(".people-list__name"),peopleWrapper=document.querySelectorAll(".people-list__item-wrapper")}function t(e){for(var t=1;t<=e;t++)currentPersonURL=l+t,s.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(s.map(reflect)).then(function(e){n(e),r(),getPlanetData()})}function n(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,height:e.resolved.height,weight:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?n.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):n.planet="unknown",e.resolved.species[0]?n.species=e.resolved.species[0].replace(/[^0-9]/g,""):n.species="unknown",peopleDataLocal.push(n)}t++})}function r(){peopleDataLocal.forEach(function(e,t){peopleName[t].dataset.name=e.name,peopleName[t].innerHTML=e.name,peopleName[t].parentElement.classList.add("people-list__item-wrapper--show")})}var a=document.querySelector(".people-list__grid"),o=document.querySelector(".people-list__item"),l="https://swapi.co/api/people/",s=[];requestSWInfo(l,"GET").then(function(n){var r=n.count;e(r),t(r)},errorHandler)}(),search=function(){function e(){term=t.value;var e=new RegExp(term,"gi");peopleWrapper.forEach(function(t){t.children[0].dataset.name&&(t.children[0].dataset.name.match(e)||t.children[1].dataset.planet.match(e)?t.classList.add("people-list__item-wrapper--show"):t.classList.remove("people-list__item-wrapper--show"))})}var t=document.querySelector(".header__input");document.querySelectorAll(".people-list__planet");t.addEventListener("change",e),t.addEventListener("keyup",e)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
