function renderPersonItem(){peopleDataLocal.forEach(function(e,t){peopleName[t].dataset.name=e.name,peopleName[t].innerHTML=e.name,peopleName[t].parentElement.classList.add("people-list__item-wrapper--show")})}function renderPlanetItem(){var e=document.querySelectorAll(".people-list__planet");peopleDataLocal.forEach(function(t,n){var o=getPersonPlanetName(t.planet);e[n].innerHTML=o,e[n].dataset.planet=o})}function getPersonPlanetName(e){var t="";return planetDataLocal.forEach(function(n){n.id!==parseInt(e)||(t=n.name)}),t}function requestSWInfo(e,t){return new Promise(function(n,o){var r=new XMLHttpRequest;r.open(t,e,!0),r.send(),r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status){var e=r.responseText,t=JSON.parse(e);n(t)}else o(r.status),console.log("xhr failed");else console.log("xhr processing going on")}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}function getPlanetData(){function e(e){for(var r=1;r<=e;r++)currentPlanetURL=s+r,i.push(requestSWInfo(currentPlanetURL,"GET"));Promise.all(i.map(reflect)).then(function(e){t(e),n(),renderPlanetItem(),o()})}function t(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,terrain:e.resolved.terrain,population:e.resolved.population,diameter:e.resolved.diameter};e.resolved.residents.length?n.residents=e.resolved.residents.map(function(e){return e.replace(/[^0-9]/g,"")}):n.residents="unknown",planetDataLocal.push(n)}t++})}function n(){peopleDataLocal.forEach(function(e){e.planetName=getPersonPlanetName(e.planet)})}function o(){l.classList.add("load-screen--fadeout"),loadGif.classList.add("load-screen__img--moveout"),loadBalloonImg.classList.remove("load-screen__balloon--show"),setTimeout(function(){a.classList.add("main--show")},1e3),setTimeout(function(){r.forEach(function(e){e.classList.add("people-list__item-wrapper--show-items")})},1200)}var r=document.querySelectorAll(".people-list__item-wrapper"),a=document.querySelector(".main"),l=document.querySelector(".load-screen"),s="https://swapi.co/api/planets/",i=[];requestSWInfo(s,"GET").then(function(t){e(t.count)},errorHandler)}var loadBalloonImg=document.querySelector(".load-screen__balloon"),loadGif=document.querySelector(".load-screen__img"),peopleDataLocal=[],planetDataLocal=[],peopleName,peopleWrapper,renderList=function(){function e(e){for(var t=1;t<e;t+=2){var n=r.cloneNode(!0);o.appendChild(n)}peopleName=document.querySelectorAll(".people-list__name"),peopleWrapper=document.querySelectorAll(".people-list__item-wrapper")}function t(e){for(var t=1;t<=e;t++)currentPersonURL=a+t,l.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(l.map(reflect)).then(function(e){n(e),renderPersonItem(),getPlanetData()})}function n(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,height:e.resolved.height,weight:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?n.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):n.planet="Unknown",e.resolved.species[0]?n.species=e.resolved.species[0].replace(/[^0-9]/g,""):n.species="Unknown",peopleDataLocal.push(n)}t++})}var o=document.querySelector(".people-list__grid"),r=document.querySelector(".people-list__item"),a="https://swapi.co/api/people/",l=[];loadGif.classList.add("load-screen__img--movein"),setTimeout(function(){loadBalloonImg.classList.add("load-screen__balloon--show")},2e3),requestSWInfo(a,"GET").then(function(n){var o=n.count;e(o),t(o)},errorHandler)}(),search=function(){function e(){term=t.value;var e=0,n=new RegExp(term,"gi");peopleWrapper.forEach(function(t){t.children[0].dataset.name&&(t.children[0].dataset.name.match(n)||t.children[1].dataset.planet.match(n)?(e++,t.classList.add("people-list__item-wrapper--show"),setTimeout(function(){t.classList.remove("people-list__item-wrapper--fade")},200)):(t.classList.add("people-list__item-wrapper--fade"),setTimeout(function(){t.classList.remove("people-list__item-wrapper--show")},200)))}),0===e?t.classList.add("header__input--no-results"):t.classList.remove("header__input--no-results")}var t=document.querySelector(".header__input");document.querySelectorAll(".people-list__planet");t.addEventListener("change",e),t.addEventListener("keyup",e)}(),sortPeople=function(){var e=document.querySelector(".header__select");e.addEventListener("change",function(){!function(e){peopleDataLocal.sort(function(t,n){return t[e]<n[e]?-1:t[e]>n[e]?1:0})}(e.value),renderPersonItem(),renderPlanetItem()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9tYWluLmpzIiwicGxhbmV0LWxpc3QuanMiLCJwZW9wbGUtbGlzdC5qcyIsInNlYXJjaC5qcyIsInNvcnRQZW9wbGUuanMiXSwibmFtZXMiOlsicmVuZGVyUGVyc29uSXRlbSIsInBlb3BsZURhdGFMb2NhbCIsImZvckVhY2giLCJwZXJzb24iLCJpbmRleCIsInBlb3BsZU5hbWUiLCJkYXRhc2V0IiwibmFtZSIsImlubmVySFRNTCIsInBhcmVudEVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW5kZXJQbGFuZXRJdGVtIiwicGxhbmV0TmFtZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInBlcnNvblBsYW5ldCIsImdldFBlcnNvblBsYW5ldE5hbWUiLCJwbGFuZXQiLCJwbGFuZXRJZCIsIm15UGxhbmV0IiwicGxhbmV0RGF0YUxvY2FsIiwiaWQiLCJwYXJzZUludCIsInJlcXVlc3RTV0luZm8iLCJ1cmwiLCJtZXRob2RUeXBlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3AiLCJyZXNwb25zZVRleHQiLCJyZXNwSnNvbiIsIkpTT04iLCJwYXJzZSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvckhhbmRsZXIiLCJzdGF0dXNDb2RlIiwicmVmbGVjdCIsInByb21pc2UiLCJ0aGVuIiwicmVzb2x2ZWQiLCJyZWplY3RlZCIsImdldFBsYW5ldERhdGEiLCJfcG9wdWxhdGVMaXN0IiwicGxhbmV0TnVtYmVyIiwiaSIsImN1cnJlbnRQbGFuZXRVUkwiLCJwbGFuZXRVUkwiLCJwcm9taXNlcyIsInB1c2giLCJhbGwiLCJtYXAiLCJwbGFuZXRzRGF0YSIsIl9zdG9yZVBsYW5ldERhdGEiLCJfc2V0UGxhbmV0TmFtZVRvUGVvcGxlIiwiX3N0YXJ0QW5pbWF0aW9uIiwicGxhbmV0RGF0YSIsIm5ld1BsYW5ldCIsInRlcnJhaW4iLCJwb3B1bGF0aW9uIiwiZGlhbWV0ZXIiLCJyZXNpZGVudHMiLCJsZW5ndGgiLCJyZXNpZGVudFVSTCIsInJlcGxhY2UiLCJsb2FkU2NyZWVuIiwibG9hZEdpZiIsImxvYWRCYWxsb29uSW1nIiwicmVtb3ZlIiwic2V0VGltZW91dCIsIm1haW4iLCJpdGVtV3JhcHBlciIsImVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZGF0YSIsImNvdW50IiwicGVvcGxlV3JhcHBlciIsInJlbmRlckxpc3QiLCJfYnVpbGRMaXN0IiwicGVvcGxlTnVtYmVyIiwicGVvcGxlTGlDbG9uZSIsInBlb3BsZUxpIiwiY2xvbmVOb2RlIiwicGVvcGxlR3JpZCIsImFwcGVuZENoaWxkIiwiY3VycmVudFBlcnNvblVSTCIsInBlb3BsZVVSTCIsInBlb3BsZURhdGEiLCJfc3RvcmVQZW9wbGVEYXRhIiwicGVyc29uRGF0YSIsIm5ld1BlcnNvbiIsImhlaWdodCIsIndlaWdodCIsIm1hc3MiLCJiaXJ0aF95ZWFyIiwiZ2VuZGVyIiwiaG9tZXdvcmxkIiwic3BlY2llcyIsInNlYXJjaCIsIl9maWx0ZXJNYXRjaGVzIiwidGVybSIsInNlYXJjaElucHV0IiwidmFsdWUiLCJtYXRjaEZsYWciLCJyZWdleCIsIlJlZ0V4cCIsInBlcnNvbldyYXBwZXIiLCJjaGlsZHJlbiIsIm1hdGNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNvcnRQZW9wbGUiLCJzZWN0VHlwZSIsInByb3BlcnR5Iiwic29ydCIsImEiLCJiIiwiX3NvcnRCeSJdLCJtYXBwaW5ncyI6IkFBT0EsU0FBQUEsbUJBQ0FDLGdCQUFBQyxRQUFBLFNBQUFDLEVBQUFDLEdBQ0FDLFdBQUFELEdBQUFFLFFBQUFDLEtBQUFKLEVBQUFJLEtBQ0FGLFdBQUFELEdBQUFJLFVBQUFMLEVBQUFJLEtBQ0FGLFdBQUFELEdBQUFLLGNBQUFDLFVBQUFDLElBQUEscUNBSUEsU0FBQUMsbUJBQ0EsSUFBQUMsRUFBQUMsU0FBQUMsaUJBQUEsd0JBRUFkLGdCQUFB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ZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGxvYWRCYWxsb29uSW1nICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2FkLXNjcmVlbl9fYmFsbG9vbicpO1xudmFyIGxvYWRHaWYgICAgICAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2FkLXNjcmVlbl9faW1nJyk7XG52YXIgcGVvcGxlRGF0YUxvY2FsID0gW107XG52YXIgcGxhbmV0RGF0YUxvY2FsID0gW107XG52YXIgcGVvcGxlTmFtZTsgLy8gaG9sZCBwZW9wbGUgbGlzdCBuYW1lIERPTSBlbFxudmFyIHBlb3BsZVdyYXBwZXI7IC8vIGhvbGQgcGVvcGxlIGxpc3Qgd3JhcHBlciBET00gZWxcblxuZnVuY3Rpb24gcmVuZGVyUGVyc29uSXRlbSgpIHtcbiAgcGVvcGxlRGF0YUxvY2FsLmZvckVhY2goIGZ1bmN0aW9uKHBlcnNvbiwgaW5kZXgpIHtcbiAgICBwZW9wbGVOYW1lW2luZGV4XS5kYXRhc2V0Lm5hbWUgPSBwZXJzb24ubmFtZTtcbiAgICBwZW9wbGVOYW1lW2luZGV4XS5pbm5lckhUTUwgPSBwZXJzb24ubmFtZTtcbiAgICBwZW9wbGVOYW1lW2luZGV4XS5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3Blb3BsZS1saXN0X19pdGVtLXdyYXBwZXItLXNob3cnKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlbmRlclBsYW5ldEl0ZW0oKSB7XG4gIHZhciBwbGFuZXROYW1lICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wZW9wbGUtbGlzdF9fcGxhbmV0Jyk7XG5cbiAgcGVvcGxlRGF0YUxvY2FsLmZvckVhY2goIGZ1bmN0aW9uKHBlcnNvbiwgaW5kZXgpIHtcbiAgICB2YXIgcGVyc29uUGxhbmV0ID0gZ2V0UGVyc29uUGxhbmV0TmFtZShwZXJzb24ucGxhbmV0KTtcbiAgICBwbGFuZXROYW1lW2luZGV4XS5pbm5lckhUTUwgPSBwZXJzb25QbGFuZXQ7XG4gICAgcGxhbmV0TmFtZVtpbmRleF0uZGF0YXNldC5wbGFuZXQgPSBwZXJzb25QbGFuZXQ7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRQZXJzb25QbGFuZXROYW1lKHBsYW5ldElkKSB7XG4gIHZhciBteVBsYW5ldCA9ICcnO1xuICBwbGFuZXREYXRhTG9jYWwuZm9yRWFjaChmdW5jdGlvbihwbGFuZXQpIHtcbiAgICBpZiAocGxhbmV0LmlkID09PSBwYXJzZUludChwbGFuZXRJZCkpIHtcbiAgICAgIG15UGxhbmV0ID0gcGxhbmV0Lm5hbWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG15UGxhbmV0O1xufVxuXG5mdW5jdGlvbiByZXF1ZXN0U1dJbmZvKHVybCwgbWV0aG9kVHlwZSl7XG4gIHZhciBwcm9taXNlT2JqID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgeGhyLm9wZW4obWV0aG9kVHlwZSwgdXJsLCB0cnVlKTtcbiAgICB4aHIuc2VuZCgpO1xuICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpe1xuICAgICAgaWYoeGhyLnJlYWR5U3RhdGUgPT09IDQpe1xuICAgICAgICAgaWYoeGhyLnN0YXR1cyA9PT0gMjAwKXtcbiAgICAgICAgICB2YXIgcmVzcCA9IHhoci5yZXNwb25zZVRleHQ7XG4gICAgICAgICAgICB2YXIgcmVzcEpzb24gPSBKU09OLnBhcnNlKHJlc3ApO1xuICAgICAgICAgICAgcmVzb2x2ZShyZXNwSnNvbik7XG4gICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICByZWplY3QoeGhyLnN0YXR1cyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInhociBmYWlsZWRcIik7IC8vIFRPRE86IGFwcGVuZCAnY2FudCBmaW5kJyBtc2dcbiAgICAgICAgICAgfVxuICAgICAgfSBlbHNle1xuICAgICAgICAgY29uc29sZS5sb2coXCJ4aHIgcHJvY2Vzc2luZyBnb2luZyBvblwiKTsgLy8gVE9ETzogYWRkIGxvYWRpbmcgYW5pbWF0aW9uXG4gICAgICAgICB9XG4gICAgfTtcbiAgfSk7XG4gIHJldHVybiBwcm9taXNlT2JqO1xufVxuXG5mdW5jdGlvbiBlcnJvckhhbmRsZXIoc3RhdHVzQ29kZSl7XG4gIGNvbnNvbGUubG9nKFwiZmFpbGVkIHdpdGggc3RhdHVzXCIsIHN0YXR1cyk7XG59XG5cbmZ1bmN0aW9uIHJlZmxlY3QocHJvbWlzZSl7XG4gIHJldHVybiBwcm9taXNlLnRoZW4oZnVuY3Rpb24ocmVzb2x2ZWQpeyByZXR1cm4ge3Jlc29sdmVkOnJlc29sdmVkLCBzdGF0dXM6IFwicmVzb2x2ZWRcIiB9O30sXG4gICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24ocmVqZWN0ZWQpeyByZXR1cm4ge3JlamVjdGVkOnJlamVjdGVkLCBzdGF0dXM6IFwicmVqZWN0ZWRcIiB9O30pO1xufVxuIiwiZnVuY3Rpb24gZ2V0UGxhbmV0RGF0YSgpe1xuICB2YXIgaXRlbVdyYXBwZXIgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGVvcGxlLWxpc3RfX2l0ZW0td3JhcHBlcicpO1xuICB2YXIgbWFpbiAgICAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbicpO1xuICB2YXIgbG9hZFNjcmVlbiAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZC1zY3JlZW4nKTtcbiAgdmFyIHBsYW5ldFVSTCAgICAgID0gJ2h0dHBzOi8vc3dhcGkuY28vYXBpL3BsYW5ldHMvJztcbiAgdmFyIHByb21pc2VzICAgICAgID0gW107XG5cbiAgcmVxdWVzdFNXSW5mbyhwbGFuZXRVUkwsIFwiR0VUXCIpLnRoZW4oX3N0YXJ0TGlzdCwgZXJyb3JIYW5kbGVyKTtcblxuICBmdW5jdGlvbiBfc3RhcnRMaXN0KGRhdGEpIHtcbiAgICB2YXIgcGxhbmV0TnVtYmVyID0gZGF0YS5jb3VudDtcbiAgICBfcG9wdWxhdGVMaXN0KHBsYW5ldE51bWJlcik7XG4gIH1cblxuICBmdW5jdGlvbiBfcG9wdWxhdGVMaXN0KHBsYW5ldE51bWJlcikge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IHBsYW5ldE51bWJlcjsgaSsrKSB7XG4gICAgICBjdXJyZW50UGxhbmV0VVJMID0gcGxhbmV0VVJMICsgaTtcbiAgICAgIHByb21pc2VzLnB1c2gocmVxdWVzdFNXSW5mbyhjdXJyZW50UGxhbmV0VVJMLCBcIkdFVFwiKSk7XG4gICAgfVxuICAgIFByb21pc2UuYWxsKHByb21pc2VzLm1hcChyZWZsZWN0KSkudGhlbihmdW5jdGlvbihwbGFuZXRzRGF0YSl7XG4gICAgICBfc3RvcmVQbGFuZXREYXRhKHBsYW5ldHNEYXRhKTtcbiAgICAgIF9zZXRQbGFuZXROYW1lVG9QZW9wbGUoKTtcbiAgICAgIHJlbmRlclBsYW5ldEl0ZW0oKTtcbiAgICAgIF9zdGFydEFuaW1hdGlvbigpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gX3N0b3JlUGxhbmV0RGF0YShwbGFuZXRzRGF0YSkge1xuICAgIHZhciBpZCA9IDE7XG4gICAgcGxhbmV0c0RhdGEuZm9yRWFjaChmdW5jdGlvbihwbGFuZXREYXRhKSB7XG4gICAgICBpZiAocGxhbmV0RGF0YS5yZXNvbHZlZCkge1xuICAgICAgICB2YXIgbmV3UGxhbmV0ID0ge1xuICAgICAgICAgIGlkOiBpZCxcbiAgICAgICAgICBuYW1lOiBwbGFuZXREYXRhLnJlc29sdmVkLm5hbWUsXG4gICAgICAgICAgdGVycmFpbjogcGxhbmV0RGF0YS5yZXNvbHZlZC50ZXJyYWluLFxuICAgICAgICAgIHBvcHVsYXRpb246IHBsYW5ldERhdGEucmVzb2x2ZWQucG9wdWxhdGlvbixcbiAgICAgICAgICBkaWFtZXRlcjogcGxhbmV0RGF0YS5yZXNvbHZlZC5kaWFtZXRlclxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChwbGFuZXREYXRhLnJlc29sdmVkLnJlc2lkZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICBuZXdQbGFuZXQucmVzaWRlbnRzID0gcGxhbmV0RGF0YS5yZXNvbHZlZC5yZXNpZGVudHMubWFwKGZ1bmN0aW9uKHJlc2lkZW50VVJMKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzaWRlbnRVUkwucmVwbGFjZSgvW14wLTldL2csJycpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1BsYW5ldC5yZXNpZGVudHMgPSBcInVua25vd25cIjtcbiAgICAgICAgfVxuICAgICAgICBwbGFuZXREYXRhTG9jYWwucHVzaChuZXdQbGFuZXQpO1xuICAgICAgfVxuICAgICAgaWQrKztcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9zZXRQbGFuZXROYW1lVG9QZW9wbGUoKSB7XG4gICAgcGVvcGxlRGF0YUxvY2FsLmZvckVhY2goZnVuY3Rpb24ocGVyc29uKSB7XG4gICAgICBwZXJzb24ucGxhbmV0TmFtZSA9IGdldFBlcnNvblBsYW5ldE5hbWUocGVyc29uLnBsYW5ldCk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBfc3RhcnRBbmltYXRpb24oKSB7XG4gICAgbG9hZFNjcmVlbi5jbGFzc0xpc3QuYWRkKCdsb2FkLXNjcmVlbi0tZmFkZW91dCcpO1xuICAgIGxvYWRHaWYuY2xhc3NMaXN0LmFkZCgnbG9hZC1zY3JlZW5fX2ltZy0tbW92ZW91dCcpO1xuICAgIGxvYWRCYWxsb29uSW1nLmNsYXNzTGlzdC5yZW1vdmUoJ2xvYWQtc2NyZWVuX19iYWxsb29uLS1zaG93Jyk7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIG1haW4uY2xhc3NMaXN0LmFkZCgnbWFpbi0tc2hvdycpO1xuICAgIH0sIDEwMDApO1xuICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGl0ZW1XcmFwcGVyLmZvckVhY2goIGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwZW9wbGUtbGlzdF9faXRlbS13cmFwcGVyLS1zaG93LWl0ZW1zJyk7XG4gICAgICB9KTtcbiAgICB9LCAxMjAwKTtcbiAgfVxufVxuIiwidmFyIHJlbmRlckxpc3QgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBwZW9wbGVHcmlkICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBlb3BsZS1saXN0X19ncmlkJyk7XG4gIHZhciBwZW9wbGVMaSAgICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBlb3BsZS1saXN0X19pdGVtJyk7XG5cbiAgdmFyIHBlb3BsZVVSTCA9ICdodHRwczovL3N3YXBpLmNvL2FwaS9wZW9wbGUvJztcbiAgdmFyIHByb21pc2VzID0gW107XG5cbiAgbG9hZEdpZi5jbGFzc0xpc3QuYWRkKCdsb2FkLXNjcmVlbl9faW1nLS1tb3ZlaW4nKTtcbiAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBsb2FkQmFsbG9vbkltZy5jbGFzc0xpc3QuYWRkKCdsb2FkLXNjcmVlbl9fYmFsbG9vbi0tc2hvdycpO1xuICB9LCAyMDAwKTtcblxuICByZXF1ZXN0U1dJbmZvKHBlb3BsZVVSTCwgXCJHRVRcIikudGhlbihfc3RhcnRMaXN0LCBlcnJvckhhbmRsZXIpO1xuXG4gIGZ1bmN0aW9uIF9zdGFydExpc3QoZGF0YSkge1xuICAgIHZhciBwZW9wbGVOdW1iZXIgPSBkYXRhLmNvdW50O1xuICAgIF9idWlsZExpc3QocGVvcGxlTnVtYmVyKTtcbiAgICBfcG9wdWxhdGVMaXN0KHBlb3BsZU51bWJlcik7XG4gIH1cblxuICBmdW5jdGlvbiBfYnVpbGRMaXN0KHBlb3BsZU51bWJlcikge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgcGVvcGxlTnVtYmVyOyBpKz0yKSB7XG4gICAgICB2YXIgcGVvcGxlTGlDbG9uZSA9IHBlb3BsZUxpLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgIHBlb3BsZUdyaWQuYXBwZW5kQ2hpbGQocGVvcGxlTGlDbG9uZSk7XG4gICAgfVxuICAgIHBlb3BsZU5hbWUgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGVvcGxlLWxpc3RfX25hbWUnKTtcbiAgICBwZW9wbGVXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBlb3BsZS1saXN0X19pdGVtLXdyYXBwZXInKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9wb3B1bGF0ZUxpc3QocGVvcGxlTnVtYmVyKSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gcGVvcGxlTnVtYmVyOyBpKyspIHtcbiAgICAgIGN1cnJlbnRQZXJzb25VUkwgPSBwZW9wbGVVUkwgKyBpO1xuICAgICAgcHJvbWlzZXMucHVzaChyZXF1ZXN0U1dJbmZvKGN1cnJlbnRQZXJzb25VUkwsIFwiR0VUXCIpKTtcbiAgICB9XG4gICAgUHJvbWlzZS5hbGwocHJvbWlzZXMubWFwKHJlZmxlY3QpKS50aGVuKGZ1bmN0aW9uKHBlb3BsZURhdGEpe1xuICAgICAgX3N0b3JlUGVvcGxlRGF0YShwZW9wbGVEYXRhKTtcbiAgICAgIHJlbmRlclBlcnNvbkl0ZW0oKTtcbiAgICAgIGdldFBsYW5ldERhdGEoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9zdG9yZVBlb3BsZURhdGEocGVvcGxlRGF0YSkge1xuICAgIHZhciBpZCA9IDE7XG4gICAgcGVvcGxlRGF0YS5mb3JFYWNoKGZ1bmN0aW9uKHBlcnNvbkRhdGEpIHtcbiAgICAgIGlmIChwZXJzb25EYXRhLnJlc29sdmVkKSB7XG4gICAgICAgIHZhciBuZXdQZXJzb24gPSB7XG4gICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgIG5hbWU6IHBlcnNvbkRhdGEucmVzb2x2ZWQubmFtZSxcbiAgICAgICAgICBoZWlnaHQ6IHBlcnNvbkRhdGEucmVzb2x2ZWQuaGVpZ2h0LFxuICAgICAgICAgIHdlaWdodDogcGVyc29uRGF0YS5yZXNvbHZlZC5tYXNzLFxuICAgICAgICAgIGJpcnRoX3llYXI6IHBlcnNvbkRhdGEucmVzb2x2ZWQuYmlydGhfeWVhcixcbiAgICAgICAgICBnZW5kZXI6IHBlcnNvbkRhdGEucmVzb2x2ZWQuZ2VuZGVyXG4gICAgICAgIH07XG4gICAgICAgIHBlcnNvbkRhdGEucmVzb2x2ZWQuaG9tZXdvcmxkID9cbiAgICAgICAgbmV3UGVyc29uLnBsYW5ldCA9IHBlcnNvbkRhdGEucmVzb2x2ZWQuaG9tZXdvcmxkLnJlcGxhY2UoL1teMC05XS9nLCcnKSA6XG4gICAgICAgIG5ld1BlcnNvbi5wbGFuZXQgPSBcIlVua25vd25cIjtcblxuICAgICAgICBwZXJzb25EYXRhLnJlc29sdmVkLnNwZWNpZXNbMF0gP1xuICAgICAgICBuZXdQZXJzb24uc3BlY2llcyA9IHBlcnNvbkRhdGEucmVzb2x2ZWQuc3BlY2llc1swXS5yZXBsYWNlKC9bXjAtOV0vZywnJykgOlxuICAgICAgICBuZXdQZXJzb24uc3BlY2llcyA9IFwiVW5rbm93blwiO1xuXG4gICAgICAgIHBlb3BsZURhdGFMb2NhbC5wdXNoKG5ld1BlcnNvbik7XG4gICAgICB9XG4gICAgICBpZCsrO1xuICAgIH0pO1xuICB9XG59KSgpO1xuIiwidmFyIHNlYXJjaCAgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXJfX2lucHV0Jyk7XG4gIHZhciBwbGFuZXROYW1lICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wZW9wbGUtbGlzdF9fcGxhbmV0Jyk7XG5cbiAgc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgX2ZpbHRlck1hdGNoZXMpO1xuICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIF9maWx0ZXJNYXRjaGVzKTtcblxuICBmdW5jdGlvbiBfZmlsdGVyTWF0Y2hlcygpIHtcbiAgICB0ZXJtID0gc2VhcmNoSW5wdXQudmFsdWU7XG4gICAgdmFyIG1hdGNoRmxhZyA9IDA7XG4gICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCh0ZXJtLCAnZ2knKTtcbiAgICBwZW9wbGVXcmFwcGVyLmZvckVhY2goZnVuY3Rpb24ocGVyc29uV3JhcHBlcikge1xuICAgICAgaWYocGVyc29uV3JhcHBlci5jaGlsZHJlblswXS5kYXRhc2V0Lm5hbWUpIHtcbiAgICAgICAgaWYgKHBlcnNvbldyYXBwZXIuY2hpbGRyZW5bMF0uZGF0YXNldC5uYW1lLm1hdGNoKHJlZ2V4KSB8fCBwZXJzb25XcmFwcGVyLmNoaWxkcmVuWzFdLmRhdGFzZXQucGxhbmV0Lm1hdGNoKHJlZ2V4KSkge1xuICAgICAgICAgIG1hdGNoRmxhZysrO1xuICAgICAgICAgICAgcGVyc29uV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdwZW9wbGUtbGlzdF9faXRlbS13cmFwcGVyLS1zaG93Jyk7XG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBwZXJzb25XcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ3Blb3BsZS1saXN0X19pdGVtLXdyYXBwZXItLWZhZGUnKTtcbiAgICAgICAgICB9LCAyMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwZXJzb25XcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3Blb3BsZS1saXN0X19pdGVtLXdyYXBwZXItLWZhZGUnKTtcbiAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBwZXJzb25XcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ3Blb3BsZS1saXN0X19pdGVtLXdyYXBwZXItLXNob3cnKTtcbiAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgbWF0Y2hGbGFnID09PSAwID8gc2VhcmNoSW5wdXQuY2xhc3NMaXN0LmFkZCgnaGVhZGVyX19pbnB1dC0tbm8tcmVzdWx0cycpIDogc2VhcmNoSW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnaGVhZGVyX19pbnB1dC0tbm8tcmVzdWx0cycpXG4gIH1cbn0pKCk7XG4iLCJ2YXIgc29ydFBlb3BsZSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIHNlY3RUeXBlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlcl9fc2VsZWN0Jyk7XG5cbiAgc2VjdFR5cGUuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgX3NvcnRQZW9wbGVEYXRhTG9jYWwpO1xuXG4gIGZ1bmN0aW9uIF9zb3J0UGVvcGxlRGF0YUxvY2FsKCkge1xuICAgIF9zb3J0Qnkoc2VjdFR5cGUudmFsdWUpO1xuICAgIHJlbmRlclBlcnNvbkl0ZW0oKTtcbiAgICByZW5kZXJQbGFuZXRJdGVtKCk7XG5cbiAgICBmdW5jdGlvbiBfc29ydEJ5KHByb3BlcnR5KSB7XG4gICAgICBwZW9wbGVEYXRhTG9jYWwuc29ydChmdW5jdGlvbihhLCBiKXtcbiAgICAgICAgaWYoYVtwcm9wZXJ0eV0gPCBiW3Byb3BlcnR5XSkgcmV0dXJuIC0xO1xuICAgICAgICBpZihhW3Byb3BlcnR5XSA+IGJbcHJvcGVydHldKSByZXR1cm4gMTtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn0pKCk7XG5cbiJdfQ==
