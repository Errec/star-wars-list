function renderPersonItem(){peopleDataLocal.forEach(function(e,a){peopleName[a].dataset.name=e.name,peopleName[a].innerHTML=e.name,peopleName[a].parentElement.classList.add("people-list__item-wrapper--show"),peopleName[a].parentElement.classList.remove("people-list__item-wrapper--fade"),searchInput.value="",searchInput.classList.remove("header__input--no-results")})}function renderPlanetItem(){var e=document.querySelectorAll(".people-list__planet");peopleDataLocal.forEach(function(a,t){var n=getPersonPlanetName(a.planet);e[t].innerHTML=n,e[t].dataset.planet=n})}function getPersonPlanetName(e){var a="";return planetDataLocal.forEach(function(t){t.id!==parseInt(e)||(a=t.name)}),a}function requestSWInfo(e,a){return new Promise(function(t,n){var o=new XMLHttpRequest;o.open(a,e,!0),o.send(),o.onreadystatechange=function(){if(4===o.readyState)if(200===o.status){var e=o.responseText,a=JSON.parse(e);t(a)}else n(o.status),console.log("xhr failed");else console.log("xhr processing going on")}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}function getPlanetData(){function e(e){for(var t=1;t<=e;t++)currentPlanetURL=i+t,c.push(requestSWInfo(currentPlanetURL,"GET"));Promise.all(c.map(reflect)).then(function(e){a(e),n(),renderPlanetItem(),o()})}function a(e){var a=1;e.forEach(function(e){if(e.resolved){var n={id:a,name:e.resolved.name,terrain:e.resolved.terrain,population:e.resolved.population,diameter:e.resolved.diameter};e.resolved.residents.length?(n.residents=e.resolved.residents.map(function(e){return e.replace(/[^0-9]/g,"")}),n.residentsNames=n.residents.map(function(e){return t(e)})):(n.residents="unknown",n.residentsNames="unknown"),planetDataLocal.push(n)}a++})}function t(e){var a="";return peopleDataLocal.forEach(function(t){t.id===parseInt(e)&&(a=t.name)}),a}function n(){peopleDataLocal.forEach(function(e){e.planetName=getPersonPlanetName(e.planet)})}function o(){l.classList.add("load-screen--fadeout"),loadGif.classList.add("load-screen__img--moveout"),loadBalloonImg.classList.remove("load-screen__balloon--show"),setTimeout(function(){s.classList.add("main--show")},1e3),setTimeout(function(){r.forEach(function(e){e.classList.add("people-list__item-wrapper--show-items")})},1200)}var r=document.querySelectorAll(".people-list__item-wrapper"),s=document.querySelector(".main"),l=document.querySelector(".load-screen"),i="https://swapi.co/api/planets/",c=[];requestSWInfo(i,"GET").then(function(a){e(a.count)},errorHandler)}var loadBalloonImg=document.querySelector(".load-screen__balloon"),loadGif=document.querySelector(".load-screen__img"),searchInput=document.querySelector(".header__input"),peopleGrid=document.querySelector(".people-list__grid"),peopleDataLocal=[],planetDataLocal=[],peopleName,peopleWrapper,modal=function(){function e(e,a,t,n){return'<div class="modal__card"><div class="modal__close-btn"></div><div class="modal__side-img '+e+'"></div><div class="modal__card-info"><div class="modal__card-subject"><p class="modal__card-title">'+a+'</p><span class="modal__card-subtitle">'+t+'</span></div><ul class="modal__info-grid">'+n+"</ul></div></div>"}function a(){var e="";return Array.prototype.slice.call(arguments).forEach(function(a){e+='<li class="modal__info-item"><span class="modal__info-item-key">'+a.key+'</span><span class="modal__info-item-value">'+a.value+"</span></li>"}),e}var t=document.querySelector(".modal");peopleGrid.addEventListener("click",function(n){n.target!==n.currentTarget&&n.target.classList.contains("people-list__value")&&(n.target.dataset.name?peopleDataLocal.forEach(function(o){if(o.name===n.target.dataset.name){var r=o.name,s='Planet</span><span class="modal__card-subtitle modal__card-planet">'+o.planetName,l=a({key:"ID:",value:o.id},{key:"Gender:",value:o.gender},{key:"Birth Year:",value:o.birth_year},{key:"Height:",value:o.height+" cm"},{key:"Mass:",value:o.mass+" Kg"});t.innerHTML=e("modal__side-img--people",r,s,l),t.classList.add("modal-show")}}):planetDataLocal.forEach(function(o){if(o.name===n.target.dataset.planet){var r=o.name,s=a({key:"ID:",value:o.id},{key:"Terrain:",value:o.terrain},{key:"Population:",value:o.population},{key:"Diameter:",value:o.diameter+" Km"},{key:"Residents:",value:o.residentsNames});t.innerHTML=e("modal__side-img--planet",r,"",s),t.classList.add("modal-show")}})),n.stopPropagation()},!1),t.addEventListener("click",function(e){e.target&&e.target.classList.contains("modal__close-btn")&&t.classList.remove("modal-show")},!1),window.onclick=function(e){e.target==t&&t.classList.remove("modal-show")}}(),renderList=function(){function e(e){for(var a=1;a<e;a+=2){var t=n.cloneNode(!0);peopleGrid.appendChild(t)}peopleName=document.querySelectorAll(".people-list__name"),peopleWrapper=document.querySelectorAll(".people-list__item-wrapper")}function a(e){for(var a=1;a<=e;a++)currentPersonURL=o+a,r.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(r.map(reflect)).then(function(e){t(e),renderPersonItem(),getPlanetData()})}function t(e){var a=1;e.forEach(function(e){if(e.resolved){var t={id:a,name:e.resolved.name,height:e.resolved.height,mass:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?t.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):t.planet="Unknown",e.resolved.species[0]?t.species=e.resolved.species[0].replace(/[^0-9]/g,""):t.species="Unknown",peopleDataLocal.push(t)}a++})}var n=document.querySelector(".people-list__item"),o="https://swapi.co/api/people/",r=[];document.addEventListener("DOMContentLoaded",function(){setTimeout(function(){loadGif.classList.add("load-screen__img--movein")},200),setTimeout(function(){loadBalloonImg.classList.add("load-screen__balloon--show")},2200)}),requestSWInfo(o,"GET").then(function(t){var n=t.count;e(n),a(n)},errorHandler)}(),search=function(){function e(){term=searchInput.value;var e=0,a=new RegExp(term,"gi");peopleWrapper.forEach(function(t){t.children[0].dataset.name&&(t.children[0].dataset.name.match(a)||t.children[1].dataset.planet.match(a)?(e++,t.classList.add("people-list__item-wrapper--show"),setTimeout(function(){t.classList.remove("people-list__item-wrapper--fade")},200)):(t.classList.add("people-list__item-wrapper--fade"),setTimeout(function(){t.classList.remove("people-list__item-wrapper--show")},200)))}),0===e?searchInput.classList.add("header__input--no-results"):searchInput.classList.remove("header__input--no-results")}document.querySelectorAll(".people-list__planet");searchInput.addEventListener("change",e),searchInput.addEventListener("keyup",e)}(),sortPeople=function(){var e=document.querySelector(".header__select");e.addEventListener("change",function(){!function(e){peopleDataLocal.sort(function(a,t){return a[e]<t[e]?-1:a[e]>t[e]?1:0})}(e.value),renderPersonItem(),renderPlanetItem()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
