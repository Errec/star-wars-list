function renderPersonItem(){peopleDataLocal.forEach(function(e,t){peopleName[t].dataset.name=e.name,peopleName[t].innerHTML=e.name,peopleName[t].parentElement.classList.add("people-list__item-wrapper--show")})}function renderPlanetItem(){var e=document.querySelectorAll(".people-list__planet");peopleDataLocal.forEach(function(t,n){var o=getPersonPlanetName(t.planet);e[n].innerHTML=o,e[n].dataset.planet=o})}function getPersonPlanetName(e){var t="";return planetDataLocal.forEach(function(n){n.id!==parseInt(e)||(t=n.name)}),t}function requestSWInfo(e,t){return new Promise(function(n,o){var r=new XMLHttpRequest;r.open(t,e,!0),r.send(),r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status){var e=r.responseText,t=JSON.parse(e);n(t)}else o(r.status),console.log("xhr failed");else console.log("xhr processing going on")}})}function errorHandler(e){console.log("failed with status",status)}function reflect(e){return e.then(function(e){return{resolved:e,status:"resolved"}},function(e){return{rejected:e,status:"rejected"}})}function getPlanetData(){function e(e){for(var r=1;r<=e;r++)currentPlanetURL=s+r,i.push(requestSWInfo(currentPlanetURL,"GET"));Promise.all(i.map(reflect)).then(function(e){t(e),n(),renderPlanetItem(),o()})}function t(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,terrain:e.resolved.terrain,population:e.resolved.population,diameter:e.resolved.diameter};e.resolved.residents.length?n.residents=e.resolved.residents.map(function(e){return e.replace(/[^0-9]/g,"")}):n.residents="unknown",planetDataLocal.push(n)}t++})}function n(){peopleDataLocal.forEach(function(e){e.planetName=getPersonPlanetName(e.planet)})}function o(){l.classList.add("load-screen--fadeout"),loadGif.classList.add("load-screen__img--moveout"),loadBalloonImg.classList.remove("load-screen__balloon--show"),setTimeout(function(){a.classList.add("main--show")},1e3),setTimeout(function(){r.forEach(function(e){e.classList.add("people-list__item-wrapper--show-items")})},1200)}var r=document.querySelectorAll(".people-list__item-wrapper"),a=document.querySelector(".main"),l=document.querySelector(".load-screen"),s="https://swapi.co/api/planets/",i=[];requestSWInfo(s,"GET").then(function(t){e(t.count)},errorHandler)}var loadBalloonImg=document.querySelector(".load-screen__balloon"),loadGif=document.querySelector(".load-screen__img"),peopleDataLocal=[],planetDataLocal=[],peopleName,peopleWrapper,renderList=function(){function e(e){for(var t=1;t<e;t+=2){var n=r.cloneNode(!0);o.appendChild(n)}peopleName=document.querySelectorAll(".people-list__name"),peopleWrapper=document.querySelectorAll(".people-list__item-wrapper")}function t(e){for(var t=1;t<=e;t++)currentPersonURL=a+t,l.push(requestSWInfo(currentPersonURL,"GET"));Promise.all(l.map(reflect)).then(function(e){n(e),renderPersonItem(),getPlanetData()})}function n(e){var t=1;e.forEach(function(e){if(e.resolved){var n={id:t,name:e.resolved.name,height:e.resolved.height,weight:e.resolved.mass,birth_year:e.resolved.birth_year,gender:e.resolved.gender};e.resolved.homeworld?n.planet=e.resolved.homeworld.replace(/[^0-9]/g,""):n.planet="Unknown",e.resolved.species[0]?n.species=e.resolved.species[0].replace(/[^0-9]/g,""):n.species="Unknown",peopleDataLocal.push(n)}t++})}var o=document.querySelector(".people-list__grid"),r=document.querySelector(".people-list__item"),a="https://swapi.co/api/people/",l=[];document.addEventListener("DOMContentLoaded",function(){setTimeout(function(){loadGif.classList.add("load-screen__img--movein")},200),setTimeout(function(){loadBalloonImg.classList.add("load-screen__balloon--show")},2200)}),requestSWInfo(a,"GET").then(function(n){var o=n.count;e(o),t(o)},errorHandler)}(),search=function(){function e(){term=t.value;var e=0,n=new RegExp(term,"gi");peopleWrapper.forEach(function(t){t.children[0].dataset.name&&(t.children[0].dataset.name.match(n)||t.children[1].dataset.planet.match(n)?(e++,t.classList.add("people-list__item-wrapper--show"),setTimeout(function(){t.classList.remove("people-list__item-wrapper--fade")},200)):(t.classList.add("people-list__item-wrapper--fade"),setTimeout(function(){t.classList.remove("people-list__item-wrapper--show")},200)))}),0===e?t.classList.add("header__input--no-results"):t.classList.remove("header__input--no-results")}var t=document.querySelector(".header__input");document.querySelectorAll(".people-list__planet");t.addEventListener("change",e),t.addEventListener("keyup",e)}(),sortPeople=function(){var e=document.querySelector(".header__select");e.addEventListener("change",function(){!function(e){peopleDataLocal.sort(function(t,n){return t[e]<n[e]?-1:t[e]>n[e]?1:0})}(e.value),renderPersonItem(),renderPlanetItem()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9tYWluLmpzIiwicGxhbmV0LWxpc3QuanMiLCJwZW9wbGUtbGlzdC5qcyIsInNlYXJjaC5qcyIsInNvcnRQZW9wbGUuanMiXSwibmFtZXMiOlsicmVuZGVyUGVyc29uSXRlbSIsInBlb3BsZURhdGFMb2NhbCIsImZvckVhY2giLCJwZXJzb24iLCJpbmRleCIsInBlb3BsZU5hbWUiLCJkYXRhc2V0IiwibmFtZSIsImlubmVySFRNTCIsInBhcmVudEVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW5kZXJQbGFuZXRJdGVtIiwicGxhbmV0TmFtZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInBlcnNvblBsYW5ldCIsImdldFBlcnNvblBsYW5ldE5hbWUiLCJwbGFuZXQiLCJwbGFuZXRJZCIsIm15UGxhbmV0IiwicGxhbmV0RGF0YUxvY2FsIiwiaWQiLCJwYXJzZUludCIsInJlcXVlc3RTV0luZm8iLCJ1cmwiLCJtZXRob2RUeXBlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3AiLCJyZXNwb25zZVRleHQiLCJyZXNwSnNvbiIsIkpTT04iLCJwYXJzZSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvckhhbmRsZXIiLCJzdGF0dXNDb2RlIiwicmVmbGVjdCIsInByb21pc2UiLCJ0aGVuIiwicmVzb2x2ZWQiLCJyZWplY3RlZCIsImdldFBsYW5ldERhdGEiLCJfcG9wdWxhdGVMaXN0IiwicGxhbmV0TnVtYmVyIiwiaSIsImN1cnJlbnRQbGFuZXRVUkwiLCJwbGFuZXRVUkwiLCJwcm9taXNlcyIsInB1c2giLCJhbGwiLCJtYXAiLCJwbGFuZXRzRGF0YSIsIl9zdG9yZVBsYW5ldERhdGEiLCJfc2V0UGxhbmV0TmFtZVRvUGVvcGxlIiwiX3N0YXJ0QW5pbWF0aW9uIiwicGxhbmV0RGF0YSIsIm5ld1BsYW5ldCIsInRlcnJhaW4iLCJwb3B1bGF0aW9uIiwiZGlhbWV0ZXIiLCJyZXNpZGVudHMiLCJsZW5ndGgiLCJyZXNpZGVudFVSTCIsInJlcGxhY2UiLCJsb2FkU2NyZWVuIiwibG9hZEdpZiIsImxvYWRCYWxsb29uSW1nIiwicmVtb3ZlIiwic2V0VGltZW91dCIsIm1haW4iLCJpdGVtV3JhcHBlciIsImVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZGF0YSIsImNvdW50IiwicGVvcGxlV3JhcHBlciIsInJlbmRlckxpc3QiLCJfYnVpbGRMaXN0IiwicGVvcGxlTnVtYmVyIiwicGVvcGxlTGlDbG9uZSIsInBlb3BsZUxpIiwiY2xvbmVOb2RlIiwicGVvcGxlR3JpZCIsImFwcGVuZENoaWxkIiwiY3VycmVudFBlcnNvblVSTCIsInBlb3BsZVVSTCIsInBlb3BsZURhdGEiLCJfc3RvcmVQZW9wbGVEYXRhIiwicGVyc29uRGF0YSIsIm5ld1BlcnNvbiIsImhlaWdodCIsIndlaWdodCIsIm1hc3MiLCJiaXJ0aF95ZWFyIiwiZ2VuZGVyIiwiaG9tZXdvcmxkIiwic3BlY2llcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZWFyY2giLCJfZmlsdGVyTWF0Y2hlcyIsInRlcm0iLCJzZWFyY2hJbnB1dCIsInZhbHVlIiwibWF0Y2hGbGFnIiwicmVnZXgiLCJSZWdFeHAiLCJwZXJzb25XcmFwcGVyIiwiY2hpbGRyZW4iLCJtYXRjaCIsInNvcnRQZW9wbGUiLCJzZWN0VHlwZSIsInByb3BlcnR5Iiwic29ydCIsImEiLCJiIiwiX3NvcnRCeSJdLCJtYXBwaW5ncyI6IkFBT0EsU0FBQUEsbUJBQ0FDLGdCQUFBQyxRQUFBLFNBQUFDLEVBQUFDLEdBQ0FDLFdBQUFELEdBQUFFLFFBQUFDLEtBQUFKLEVBQUFJLEtBQ0FGLFdBQUFELEdBQUFJLFVBQUFMLEVBQUFJLEtBQ0FGLFdBQUFELEdBQUFLLGNBQUFDLFVBQUFDLElBQUEscUNBSUEsU0FBQUMsbUJBQ0EsSUFBQUMsRUFBQUMsU0FBQUMsaUJBQUEsd0JBRUFkLGdCQUFB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QUFBTCxFQUFBUixPQUNBaEgsbUJBQ0FZLHFCQVJBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBsb2FkQmFsbG9vbkltZyAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZC1zY3JlZW5fX2JhbGxvb24nKTtcbnZhciBsb2FkR2lmICAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZC1zY3JlZW5fX2ltZycpO1xudmFyIHBlb3BsZURhdGFMb2NhbCA9IFtdO1xudmFyIHBsYW5ldERhdGFMb2NhbCA9IFtdO1xudmFyIHBlb3BsZU5hbWU7IC8vIGhvbGQgcGVvcGxlIGxpc3QgbmFtZSBET00gZWxcbnZhciBwZW9wbGVXcmFwcGVyOyAvLyBob2xkIHBlb3BsZSBsaXN0IHdyYXBwZXIgRE9NIGVsXG5cbmZ1bmN0aW9uIHJlbmRlclBlcnNvbkl0ZW0oKSB7XG4gIHBlb3BsZURhdGFMb2NhbC5mb3JFYWNoKCBmdW5jdGlvbihwZXJzb24sIGluZGV4KSB7XG4gICAgcGVvcGxlTmFtZVtpbmRleF0uZGF0YXNldC5uYW1lID0gcGVyc29uLm5hbWU7XG4gICAgcGVvcGxlTmFtZVtpbmRleF0uaW5uZXJIVE1MID0gcGVyc29uLm5hbWU7XG4gICAgcGVvcGxlTmFtZVtpbmRleF0ucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwZW9wbGUtbGlzdF9faXRlbS13cmFwcGVyLS1zaG93Jyk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZW5kZXJQbGFuZXRJdGVtKCkge1xuICB2YXIgcGxhbmV0TmFtZSAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGVvcGxlLWxpc3RfX3BsYW5ldCcpO1xuXG4gIHBlb3BsZURhdGFMb2NhbC5mb3JFYWNoKCBmdW5jdGlvbihwZXJzb24sIGluZGV4KSB7XG4gICAgdmFyIHBlcnNvblBsYW5ldCA9IGdldFBlcnNvblBsYW5ldE5hbWUocGVyc29uLnBsYW5ldCk7XG4gICAgcGxhbmV0TmFtZVtpbmRleF0uaW5uZXJIVE1MID0gcGVyc29uUGxhbmV0O1xuICAgIHBsYW5ldE5hbWVbaW5kZXhdLmRhdGFzZXQucGxhbmV0ID0gcGVyc29uUGxhbmV0O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0UGVyc29uUGxhbmV0TmFtZShwbGFuZXRJZCkge1xuICB2YXIgbXlQbGFuZXQgPSAnJztcbiAgcGxhbmV0RGF0YUxvY2FsLmZvckVhY2goZnVuY3Rpb24ocGxhbmV0KSB7XG4gICAgaWYgKHBsYW5ldC5pZCA9PT0gcGFyc2VJbnQocGxhbmV0SWQpKSB7XG4gICAgICBteVBsYW5ldCA9IHBsYW5ldC5uYW1lO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBteVBsYW5ldDtcbn1cblxuZnVuY3Rpb24gcmVxdWVzdFNXSW5mbyh1cmwsIG1ldGhvZFR5cGUpe1xuICB2YXIgcHJvbWlzZU9iaiA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCl7XG4gICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIHhoci5vcGVuKG1ldGhvZFR5cGUsIHVybCwgdHJ1ZSk7XG4gICAgeGhyLnNlbmQoKTtcbiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKXtcbiAgICAgIGlmKHhoci5yZWFkeVN0YXRlID09PSA0KXtcbiAgICAgICAgIGlmKHhoci5zdGF0dXMgPT09IDIwMCl7XG4gICAgICAgICAgdmFyIHJlc3AgPSB4aHIucmVzcG9uc2VUZXh0O1xuICAgICAgICAgICAgdmFyIHJlc3BKc29uID0gSlNPTi5wYXJzZShyZXNwKTtcbiAgICAgICAgICAgIHJlc29sdmUocmVzcEpzb24pO1xuICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgcmVqZWN0KHhoci5zdGF0dXMpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJ4aHIgZmFpbGVkXCIpOyAvLyBUT0RPOiBhcHBlbmQgJ2NhbnQgZmluZCcgbXNnXG4gICAgICAgICAgIH1cbiAgICAgIH0gZWxzZXtcbiAgICAgICAgIGNvbnNvbGUubG9nKFwieGhyIHByb2Nlc3NpbmcgZ29pbmcgb25cIik7IC8vIFRPRE86IGFkZCBsb2FkaW5nIGFuaW1hdGlvblxuICAgICAgICAgfVxuICAgIH07XG4gIH0pO1xuICByZXR1cm4gcHJvbWlzZU9iajtcbn1cblxuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKHN0YXR1c0NvZGUpe1xuICBjb25zb2xlLmxvZyhcImZhaWxlZCB3aXRoIHN0YXR1c1wiLCBzdGF0dXMpO1xufVxuXG5mdW5jdGlvbiByZWZsZWN0KHByb21pc2Upe1xuICByZXR1cm4gcHJvbWlzZS50aGVuKGZ1bmN0aW9uKHJlc29sdmVkKXsgcmV0dXJuIHtyZXNvbHZlZDpyZXNvbHZlZCwgc3RhdHVzOiBcInJlc29sdmVkXCIgfTt9LFxuICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHJlamVjdGVkKXsgcmV0dXJuIHtyZWplY3RlZDpyZWplY3RlZCwgc3RhdHVzOiBcInJlamVjdGVkXCIgfTt9KTtcbn1cbiIsImZ1bmN0aW9uIGdldFBsYW5ldERhdGEoKXtcbiAgdmFyIGl0ZW1XcmFwcGVyICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBlb3BsZS1saXN0X19pdGVtLXdyYXBwZXInKTtcbiAgdmFyIG1haW4gICAgICAgICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4nKTtcbiAgdmFyIGxvYWRTY3JlZW4gICAgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxvYWQtc2NyZWVuJyk7XG4gIHZhciBwbGFuZXRVUkwgICAgICA9ICdodHRwczovL3N3YXBpLmNvL2FwaS9wbGFuZXRzLyc7XG4gIHZhciBwcm9taXNlcyAgICAgICA9IFtdO1xuXG4gIHJlcXVlc3RTV0luZm8ocGxhbmV0VVJMLCBcIkdFVFwiKS50aGVuKF9zdGFydExpc3QsIGVycm9ySGFuZGxlcik7XG5cbiAgZnVuY3Rpb24gX3N0YXJ0TGlzdChkYXRhKSB7XG4gICAgdmFyIHBsYW5ldE51bWJlciA9IGRhdGEuY291bnQ7XG4gICAgX3BvcHVsYXRlTGlzdChwbGFuZXROdW1iZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3BvcHVsYXRlTGlzdChwbGFuZXROdW1iZXIpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBwbGFuZXROdW1iZXI7IGkrKykge1xuICAgICAgY3VycmVudFBsYW5ldFVSTCA9IHBsYW5ldFVSTCArIGk7XG4gICAgICBwcm9taXNlcy5wdXNoKHJlcXVlc3RTV0luZm8oY3VycmVudFBsYW5ldFVSTCwgXCJHRVRcIikpO1xuICAgIH1cbiAgICBQcm9taXNlLmFsbChwcm9taXNlcy5tYXAocmVmbGVjdCkpLnRoZW4oZnVuY3Rpb24ocGxhbmV0c0RhdGEpe1xuICAgICAgX3N0b3JlUGxhbmV0RGF0YShwbGFuZXRzRGF0YSk7XG4gICAgICBfc2V0UGxhbmV0TmFtZVRvUGVvcGxlKCk7XG4gICAgICByZW5kZXJQbGFuZXRJdGVtKCk7XG4gICAgICBfc3RhcnRBbmltYXRpb24oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9zdG9yZVBsYW5ldERhdGEocGxhbmV0c0RhdGEpIHtcbiAgICB2YXIgaWQgPSAxO1xuICAgIHBsYW5ldHNEYXRhLmZvckVhY2goZnVuY3Rpb24ocGxhbmV0RGF0YSkge1xuICAgICAgaWYgKHBsYW5ldERhdGEucmVzb2x2ZWQpIHtcbiAgICAgICAgdmFyIG5ld1BsYW5ldCA9IHtcbiAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgbmFtZTogcGxhbmV0RGF0YS5yZXNvbHZlZC5uYW1lLFxuICAgICAgICAgIHRlcnJhaW46IHBsYW5ldERhdGEucmVzb2x2ZWQudGVycmFpbixcbiAgICAgICAgICBwb3B1bGF0aW9uOiBwbGFuZXREYXRhLnJlc29sdmVkLnBvcHVsYXRpb24sXG4gICAgICAgICAgZGlhbWV0ZXI6IHBsYW5ldERhdGEucmVzb2x2ZWQuZGlhbWV0ZXJcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAocGxhbmV0RGF0YS5yZXNvbHZlZC5yZXNpZGVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgbmV3UGxhbmV0LnJlc2lkZW50cyA9IHBsYW5ldERhdGEucmVzb2x2ZWQucmVzaWRlbnRzLm1hcChmdW5jdGlvbihyZXNpZGVudFVSTCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc2lkZW50VVJMLnJlcGxhY2UoL1teMC05XS9nLCcnKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdQbGFuZXQucmVzaWRlbnRzID0gXCJ1bmtub3duXCI7XG4gICAgICAgIH1cbiAgICAgICAgcGxhbmV0RGF0YUxvY2FsLnB1c2gobmV3UGxhbmV0KTtcbiAgICAgIH1cbiAgICAgIGlkKys7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBfc2V0UGxhbmV0TmFtZVRvUGVvcGxlKCkge1xuICAgIHBlb3BsZURhdGFMb2NhbC5mb3JFYWNoKGZ1bmN0aW9uKHBlcnNvbikge1xuICAgICAgcGVyc29uLnBsYW5ldE5hbWUgPSBnZXRQZXJzb25QbGFuZXROYW1lKHBlcnNvbi5wbGFuZXQpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gX3N0YXJ0QW5pbWF0aW9uKCkge1xuICAgIGxvYWRTY3JlZW4uY2xhc3NMaXN0LmFkZCgnbG9hZC1zY3JlZW4tLWZhZGVvdXQnKTtcbiAgICBsb2FkR2lmLmNsYXNzTGlzdC5hZGQoJ2xvYWQtc2NyZWVuX19pbWctLW1vdmVvdXQnKTtcbiAgICBsb2FkQmFsbG9vbkltZy5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkLXNjcmVlbl9fYmFsbG9vbi0tc2hvdycpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBtYWluLmNsYXNzTGlzdC5hZGQoJ21haW4tLXNob3cnKTtcbiAgICB9LCAxMDAwKTtcbiAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpdGVtV3JhcHBlci5mb3JFYWNoKCBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncGVvcGxlLWxpc3RfX2l0ZW0td3JhcHBlci0tc2hvdy1pdGVtcycpO1xuICAgICAgfSk7XG4gICAgfSwgMTIwMCk7XG4gIH1cbn1cbiIsInZhciByZW5kZXJMaXN0ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgcGVvcGxlR3JpZCAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wZW9wbGUtbGlzdF9fZ3JpZCcpO1xuICB2YXIgcGVvcGxlTGkgICAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wZW9wbGUtbGlzdF9faXRlbScpO1xuXG4gIHZhciBwZW9wbGVVUkwgPSAnaHR0cHM6Ly9zd2FwaS5jby9hcGkvcGVvcGxlLyc7XG4gIHZhciBwcm9taXNlcyA9IFtdO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uKCkge1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBsb2FkR2lmLmNsYXNzTGlzdC5hZGQoJ2xvYWQtc2NyZWVuX19pbWctLW1vdmVpbicpO1xuICAgIH0sIDIwMCk7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGxvYWRCYWxsb29uSW1nLmNsYXNzTGlzdC5hZGQoJ2xvYWQtc2NyZWVuX19iYWxsb29uLS1zaG93Jyk7XG4gICAgfSwgMjIwMCk7XG4gIH0pO1xuXG4gIHJlcXVlc3RTV0luZm8ocGVvcGxlVVJMLCBcIkdFVFwiKS50aGVuKF9zdGFydExpc3QsIGVycm9ySGFuZGxlcik7XG5cbiAgZnVuY3Rpb24gX3N0YXJ0TGlzdChkYXRhKSB7XG4gICAgdmFyIHBlb3BsZU51bWJlciA9IGRhdGEuY291bnQ7XG4gICAgX2J1aWxkTGlzdChwZW9wbGVOdW1iZXIpO1xuICAgIF9wb3B1bGF0ZUxpc3QocGVvcGxlTnVtYmVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9idWlsZExpc3QocGVvcGxlTnVtYmVyKSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBwZW9wbGVOdW1iZXI7IGkrPTIpIHtcbiAgICAgIHZhciBwZW9wbGVMaUNsb25lID0gcGVvcGxlTGkuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgcGVvcGxlR3JpZC5hcHBlbmRDaGlsZChwZW9wbGVMaUNsb25lKTtcbiAgICB9XG4gICAgcGVvcGxlTmFtZSAgICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wZW9wbGUtbGlzdF9fbmFtZScpO1xuICAgIHBlb3BsZVdyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGVvcGxlLWxpc3RfX2l0ZW0td3JhcHBlcicpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3BvcHVsYXRlTGlzdChwZW9wbGVOdW1iZXIpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBwZW9wbGVOdW1iZXI7IGkrKykge1xuICAgICAgY3VycmVudFBlcnNvblVSTCA9IHBlb3BsZVVSTCArIGk7XG4gICAgICBwcm9taXNlcy5wdXNoKHJlcXVlc3RTV0luZm8oY3VycmVudFBlcnNvblVSTCwgXCJHRVRcIikpO1xuICAgIH1cbiAgICBQcm9taXNlLmFsbChwcm9taXNlcy5tYXAocmVmbGVjdCkpLnRoZW4oZnVuY3Rpb24ocGVvcGxlRGF0YSl7XG4gICAgICBfc3RvcmVQZW9wbGVEYXRhKHBlb3BsZURhdGEpO1xuICAgICAgcmVuZGVyUGVyc29uSXRlbSgpO1xuICAgICAgZ2V0UGxhbmV0RGF0YSgpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gX3N0b3JlUGVvcGxlRGF0YShwZW9wbGVEYXRhKSB7XG4gICAgdmFyIGlkID0gMTtcbiAgICBwZW9wbGVEYXRhLmZvckVhY2goZnVuY3Rpb24ocGVyc29uRGF0YSkge1xuICAgICAgaWYgKHBlcnNvbkRhdGEucmVzb2x2ZWQpIHtcbiAgICAgICAgdmFyIG5ld1BlcnNvbiA9IHtcbiAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgbmFtZTogcGVyc29uRGF0YS5yZXNvbHZlZC5uYW1lLFxuICAgICAgICAgIGhlaWdodDogcGVyc29uRGF0YS5yZXNvbHZlZC5oZWlnaHQsXG4gICAgICAgICAgd2VpZ2h0OiBwZXJzb25EYXRhLnJlc29sdmVkLm1hc3MsXG4gICAgICAgICAgYmlydGhfeWVhcjogcGVyc29uRGF0YS5yZXNvbHZlZC5iaXJ0aF95ZWFyLFxuICAgICAgICAgIGdlbmRlcjogcGVyc29uRGF0YS5yZXNvbHZlZC5nZW5kZXJcbiAgICAgICAgfTtcbiAgICAgICAgcGVyc29uRGF0YS5yZXNvbHZlZC5ob21ld29ybGQgP1xuICAgICAgICBuZXdQZXJzb24ucGxhbmV0ID0gcGVyc29uRGF0YS5yZXNvbHZlZC5ob21ld29ybGQucmVwbGFjZSgvW14wLTldL2csJycpIDpcbiAgICAgICAgbmV3UGVyc29uLnBsYW5ldCA9IFwiVW5rbm93blwiO1xuXG4gICAgICAgIHBlcnNvbkRhdGEucmVzb2x2ZWQuc3BlY2llc1swXSA/XG4gICAgICAgIG5ld1BlcnNvbi5zcGVjaWVzID0gcGVyc29uRGF0YS5yZXNvbHZlZC5zcGVjaWVzWzBdLnJlcGxhY2UoL1teMC05XS9nLCcnKSA6XG4gICAgICAgIG5ld1BlcnNvbi5zcGVjaWVzID0gXCJVbmtub3duXCI7XG5cbiAgICAgICAgcGVvcGxlRGF0YUxvY2FsLnB1c2gobmV3UGVyc29uKTtcbiAgICAgIH1cbiAgICAgIGlkKys7XG4gICAgfSk7XG4gIH1cbn0pKCk7XG4iLCJ2YXIgc2VhcmNoICA9IChmdW5jdGlvbigpIHtcbiAgdmFyIHNlYXJjaElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlcl9faW5wdXQnKTtcbiAgdmFyIHBsYW5ldE5hbWUgID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBlb3BsZS1saXN0X19wbGFuZXQnKTtcblxuICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBfZmlsdGVyTWF0Y2hlcyk7XG4gIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgX2ZpbHRlck1hdGNoZXMpO1xuXG4gIGZ1bmN0aW9uIF9maWx0ZXJNYXRjaGVzKCkge1xuICAgIHRlcm0gPSBzZWFyY2hJbnB1dC52YWx1ZTtcbiAgICB2YXIgbWF0Y2hGbGFnID0gMDtcbiAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKHRlcm0sICdnaScpO1xuICAgIHBlb3BsZVdyYXBwZXIuZm9yRWFjaChmdW5jdGlvbihwZXJzb25XcmFwcGVyKSB7XG4gICAgICBpZihwZXJzb25XcmFwcGVyLmNoaWxkcmVuWzBdLmRhdGFzZXQubmFtZSkge1xuICAgICAgICBpZiAocGVyc29uV3JhcHBlci5jaGlsZHJlblswXS5kYXRhc2V0Lm5hbWUubWF0Y2gocmVnZXgpIHx8IHBlcnNvbldyYXBwZXIuY2hpbGRyZW5bMV0uZGF0YXNldC5wbGFuZXQubWF0Y2gocmVnZXgpKSB7XG4gICAgICAgICAgbWF0Y2hGbGFnKys7XG4gICAgICAgICAgICBwZXJzb25XcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3Blb3BsZS1saXN0X19pdGVtLXdyYXBwZXItLXNob3cnKTtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHBlcnNvbldyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgncGVvcGxlLWxpc3RfX2l0ZW0td3JhcHBlci0tZmFkZScpO1xuICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBlcnNvbldyYXBwZXIuY2xhc3NMaXN0LmFkZCgncGVvcGxlLWxpc3RfX2l0ZW0td3JhcHBlci0tZmFkZScpO1xuICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHBlcnNvbldyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgncGVvcGxlLWxpc3RfX2l0ZW0td3JhcHBlci0tc2hvdycpO1xuICAgICAgICAgICAgICB9LCAyMDApO1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICBtYXRjaEZsYWcgPT09IDAgPyBzZWFyY2hJbnB1dC5jbGFzc0xpc3QuYWRkKCdoZWFkZXJfX2lucHV0LS1uby1yZXN1bHRzJykgOiBzZWFyY2hJbnB1dC5jbGFzc0xpc3QucmVtb3ZlKCdoZWFkZXJfX2lucHV0LS1uby1yZXN1bHRzJylcbiAgfVxufSkoKTtcbiIsInZhciBzb3J0UGVvcGxlID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgc2VjdFR5cGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19zZWxlY3QnKTtcblxuICBzZWN0VHlwZS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBfc29ydFBlb3BsZURhdGFMb2NhbCk7XG5cbiAgZnVuY3Rpb24gX3NvcnRQZW9wbGVEYXRhTG9jYWwoKSB7XG4gICAgX3NvcnRCeShzZWN0VHlwZS52YWx1ZSk7XG4gICAgcmVuZGVyUGVyc29uSXRlbSgpO1xuICAgIHJlbmRlclBsYW5ldEl0ZW0oKTtcblxuICAgIGZ1bmN0aW9uIF9zb3J0QnkocHJvcGVydHkpIHtcbiAgICAgIHBlb3BsZURhdGFMb2NhbC5zb3J0KGZ1bmN0aW9uKGEsIGIpe1xuICAgICAgICBpZihhW3Byb3BlcnR5XSA8IGJbcHJvcGVydHldKSByZXR1cm4gLTE7XG4gICAgICAgIGlmKGFbcHJvcGVydHldID4gYltwcm9wZXJ0eV0pIHJldHVybiAxO1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSkoKTtcblxuIl19
